<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Grupp4Lms.Api</name>
    </assembly>
    <members>
        <member name="T:Grupp4Lms.Api.Controllers.KurslitteraturController">
            <summary>
            KurslitteraturController med action för Litteratur, Forfattare, Amnen och Nivåer
            </summary>
        </member>
        <member name="M:Grupp4Lms.Api.Controllers.KurslitteraturController.#ctor(Grupp4Lms.Core.IRepositories.IUnitOfWork,AutoMapper.IMapper)">
            <summary>
            Konstruktor
            </summary>
            <param name="uow">Unit of work. Används för att anropa olika Repository</param>
            <param name="mapper">Automapper</param>
        </member>
        <member name="M:Grupp4Lms.Api.Controllers.KurslitteraturController.GetNivaer">
            <summary>
            GET: api/KurslitteraturController/GetNivaer
            Async metod som returnerar IEnumarable med Nivåer
            </summary>
            <returns>Ok=200 och en lista med Nivåer</returns>
            <response code="200">Returnerade lista med Nivåer i form av NivaDto objekt</response>
        </member>
        <member name="M:Grupp4Lms.Api.Controllers.KurslitteraturController.GetAmnen">
            <summary>
            GET: api/KurslitteraturController/GetAmnen
            Async metod som returnerar IEnumarable med Ämnen
            </summary>
            <returns>Ok=200 och en lista med Ämnen</returns>
            <response code="200">Returnerade lista med Ämnen i form av AmneDto objekt</response>
        </member>
        <member name="M:Grupp4Lms.Api.Controllers.KurslitteraturController.GetLitteraturen">
            <summary>
            GET: api/KurslitteraturController/GetLitteraturen
            Async metod som returnerar litteraturen exklusive forfattare
            </summary>
            <returns>Ok=200 och en lista med litteratur exklusive forfattare</returns>
            <response code="200">Returnerade lista med LitteraturDto objekt</response>
        </member>
        <member name="M:Grupp4Lms.Api.Controllers.KurslitteraturController.GetLitteratur(System.Int32)">
            <summary>
            GET: api/KurslitteraturController/GetLitteratur/1
            Async metod som returnerar sökt litteratur exklusive forfattare
            </summary>
            <param name="id">Id för sökt litteratur</param>
            <returns>Ok=200 och sökt litteratur exklusive forfattare</returns>
            <response code="200">Returnerar sökt litteratur som ett LitteraturDto objekt</response>
            <response code="404">Hittade inte sökt litteratur</response>
        </member>
        <member name="M:Grupp4Lms.Api.Controllers.KurslitteraturController.GetLitteraturenInklusiveForfattare">
            <summary>
            GET: api/KurslitteraturController/GetLitteraturenInklusiveForfattare
            Async metod som returnerar litteraturen exklusive forfattare
            </summary>
            <returns>Ok=200 och en lista med litteratur inklusive forfattare</returns>
            <response code="200">Returnerade lista med LitteraturInklusiveForfattareDto objekt</response>
        </member>
        <member name="M:Grupp4Lms.Api.Controllers.KurslitteraturController.GetLitteraturInklusiveForfattare(System.Int32)">
            <summary>
            GET: api/KurslitteraturController/GetLitteraturInklusiveForfattare/1
            Async metod som returnerar sökt litteratur inklusive forfattare
            </summary>
            <param name="id">id för sökt litteratur</param>
            <returns>Ok=200 och sökt litteratur inklusive forfattare</returns>
            <response code="200">Returnerade sökt litteratur som ett LitteraturInklusiveForfattareDto objekt</response>
            <response code="404">Hittade inte sökt litteratur</response>
        </member>
        <member name="M:Grupp4Lms.Api.Controllers.KurslitteraturController.GetForfattare">
            <summary>
            GET: api/KurslitteraturController/GetForfattare
            Async metod som returnerar författarna
            </summary>
            <returns>Ok=200 och en lista med författare</returns>
            <response code="200">Returnerade lista med författare som  ForfattareDto objekt</response>
        </member>
        <member name="M:Grupp4Lms.Api.Controllers.KurslitteraturController.GetForfattare(System.Int32)">
            <summary>
            GET: api/KurslitteraturController/GetForfattare/1
            Async metod som returnerar sökt författare
            </summary>
            <param name="id">id för sökt författare</param>
            <returns>Ok=200 och sökt författare</returns>
            <response code="200">Returnerar sökt författare som ForfattareDto objekt</response>
            <response code="404">Hittade inte sökt litteratur</response>
        </member>
        <member name="M:Grupp4Lms.Api.Controllers.KurslitteraturController.GetForfattareInklusiveLitteratur">
            <summary>
            GET: api/KurslitteraturController/GetForfattareInklusiveLitteratur
            Async metod som returnerar författarna inklusive litteratur som författaren har varit med och skrivit
            </summary>
            <returns>Ok=200 och en lista med författare inklusive litteratur som författaren har varit med och skrivit</returns>
            <response code="200">Returnerade lista med författare inklusive litteratur som författaren har varit med och skrivit som ForfattareInklusiveLitteraturDto objekt</response>
        </member>
        <member name="M:Grupp4Lms.Api.Controllers.KurslitteraturController.GetForfattareInkusiveLitteratur(System.Int32)">
            <summary>
            GET: api/KurslitteraturController/GetForfattareInkusiveLitteratur/1
            Async metod som returnerar sökt författare inklusive den litteratur som författaren har skrivit
            </summary>
            <param name="id">id för sökt författare</param>
            <returns>Ok=200 och sökt författare inklusive den litteratur som författaren har skrivit</returns>
            <response code="200">Returnerade sökt författare inklusive den litteratur som författaren har skrivit som ForfattareInklusiveLitteraturDto objekt</response>
            <response code="404">Hittade inte sökt litteratur</response>
        </member>
        <member name="M:Grupp4Lms.Api.Controllers.KurslitteraturController.SearchLitteratur(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Async metod som returnerar IEnumerable med Litteratur inklusive författare som matchar sökningen
            </summary>
            <param name="titel">Titel som vi vill söka på. Kan vara null eller empty string</param>
            <param name="forfattare">Namn på författaren som vi vill söka på. Kan vara null eller empty string</param>
            <param name="amne">Id för ämne som vi vill söka på. Kan vara 0 eller -1 och då söker vi inte på ämne</param>
            <returns>Ok=200 och IEnumerable med litteratur inklusive författare som matchar sökningen</returns>
        </member>
        <member name="M:Grupp4Lms.Api.Controllers.KurslitteraturController.PostLitteratur(Grupp4Lms.Core.Dto.CreateLitteraturDto)">
            <summary>
            Async metod som skapar ny litteratur
            </summary>
            <param name="dto">CreateLitteraturDto med information om litteratur och eventuella författare</param>
            <returns>Om det gick bra returneras Ok = 200.
            Om ModelState ej är valid returneras BadRequest = 400.
            Om det inte gick uppdatera litteraturen returneras StatusCode = 500
            </returns>
            <response code="200">Skapandet av litteraturen gick bra</response>
            <response code="400">ModelState isn't valid</response>
            <response code="500">Det gick inte skapa litteraturen</response>
        </member>
        <member name="M:Grupp4Lms.Api.Controllers.KurslitteraturController.PutLitteraturAsync(System.Int32,Grupp4Lms.Core.Dto.EditLitteraturDto)">
            <summary>
            PUT: api/KursLitteratur/5
            Put, update/replace, litteratur
            </summary>
            <param name="id">id för litteratur som skall uppdateras</param>
            <param name="dto">Information om litteraturen som skall uppdateras</param>
            <returns>Om det gick bra returneras Ok = 200. 
            Om id och CreateLitteraturDto ej har samma id returneras BadRequest = 400. 
            Om ModelState ej är valid returneras BadRequest = 400.
            Om litteraturen som skall uppdateras inte finns returneras NotFound = 404.
            Om det inte gick uppdatera litteraturen returneras StatusCode = 500
            </returns>
            <response code="200">Uppdatering av litteraturen gick bra</response>
            <response code="400">Id och litteraturen id är inte samma eller ModelState isn't valid</response>
            <response code="404">Litteraturen som skall uppdateras finns ej</response>
            <response code="500">Det gick inte uppdatera informationen om litteraturen</response>
        </member>
        <member name="M:Grupp4Lms.Api.Controllers.KurslitteraturController.DeleteLitteraturAsync(System.Int32)">
            <summary>
            Async metod som raderar en litteraturen
            </summary>
            <param name="id">id för sökt litteraturen</param>
            <returns>Ok=200</returns>
            <response code="200">Ok</response>
            <response code="404">Hittade inte sökt litteraturen</response>
            <response code="500">Det gick inte radera litteraturen</response>
        </member>
        <member name="M:Grupp4Lms.Api.Controllers.KurslitteraturController.PostForfattare(Grupp4Lms.Core.Dto.CreateForfattareDto)">
            <summary>
            Async metod som skapar ny författare
            </summary>
            <param name="dto">CreateForfattareDto med information om forfattaren</param>
            <returns>Om det gick bra returneras Ok = 200.
            Om ModelState ej är valid returneras BadRequest = 400.
            Om det inte gick uppdatera forfattaren returneras StatusCode = 500
            </returns>
            <response code="200">Skapandet av forfattaren gick bra</response>
            <response code="400">ModelState isn't valid</response>
            <response code="500">Det gick inte skapa forfattaren</response>
        </member>
        <member name="M:Grupp4Lms.Api.Controllers.KurslitteraturController.PostForfattareKopplaTillLitteratur(Grupp4Lms.Core.Dto.CreateForfattareDto)">
            <summary>
            Async metod som skapar ny författare. Kopplar författaren till litteratur
            Id för litteraturen måste finnas i LitteraturId
            Om LitteraturId inte är större än 0 kommer författern skapas utan koppling till litteratur
            </summary>
            <param name="dto">CreateForfattareDto med information om forfattaren</param>
            <returns>Om det gick bra returneras Ok = 200.
            Om ModelState ej är valid returneras BadRequest = 400.
            Om det inte gick uppdatera forfattaren returneras StatusCode = 500
            </returns>
            <response code="200">Skapandet av forfattaren gick bra</response>
            <response code="400">ModelState isn't valid</response>
            <response code="500">Det gick inte skapa forfattaren</response>
        </member>
        <member name="M:Grupp4Lms.Api.Controllers.KurslitteraturController.PutForfattareAsync(System.Int32,Grupp4Lms.Core.Dto.EditForfattareDto)">
            <summary>
            PUT: api/KursLitteratur/5
            Put, update/replace, forfattare
            </summary>
            <param name="id">id för forfattaren som skall uppdateras</param>
            <param name="dto">Information om forfattaren som skall uppdateras</param>
            <returns>Om det gick bra returneras Ok = 200. 
            Om id och EditForfattareDto ej har samma id returneras BadRequest = 400. 
            Om ModelState ej är valid returneras BadRequest = 400.
            Om forfattaren som skall uppdateras inte finns returneras NotFound = 404.
            Om det inte gick uppdatera författaren returneras StatusCode = 500
            </returns>
            <response code="200">Uppdatering av forfattaren gick bra</response>
            <response code="400">Id och forfattare id är inte samma eller ModelState isn't valid</response>
            <response code="404">forfattaren som skall uppdateras finns ej</response>
            <response code="500">Det gick inte uppdatera informationen om forfattaren</response>
        </member>
        <member name="M:Grupp4Lms.Api.Controllers.KurslitteraturController.DeleteForfattareAsync(System.Int32)">
            <summary>
            Async metod som raderar en författare
            </summary>
            <param name="id">id för sökt författare</param>
            <returns>Ok=200</returns>
            <response code="200">Ok</response>
            <response code="404">Hittade inte sökt författare</response>
            <response code="500">Det gick inte radera forfattaren</response>
        </member>
    </members>
</doc>
