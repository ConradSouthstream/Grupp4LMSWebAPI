<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Grupp4Lms.Data</name>
    </assembly>
    <members>
        <member name="T:Grupp4Lms.Data.Data.Seed">
            <summary>
            Seed klass som skapar data i databasen
            </summary>
        </member>
        <member name="M:Grupp4Lms.Data.Data.Seed.InitAsync(System.IServiceProvider)">
            <summary>
            Async metod som skapar data i databasen
            </summary>
            <param name="services">IServiceProvider</param>
            <returns>Task</returns>
        </member>
        <member name="T:Grupp4Lms.Data.MapperProfiles.MapperProfile">
            <summary>
            Map metoder för automapper
            </summary>
        </member>
        <member name="M:Grupp4Lms.Data.MapperProfiles.MapperProfile.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="M:Grupp4Lms.Data.MapperProfiles.MapperProfile.OtherMap">
            <summary>
            Mappers för Niva till NivaDto och
            Amne till AmneDto
            </summary>
        </member>
        <member name="M:Grupp4Lms.Data.MapperProfiles.MapperProfile.ForfattareMap">
            <summary>
            Mappers för Forfattare till ForfattareDto och
            Forfattare till ForfattareInklusiveLitteraturDto
            </summary>
        </member>
        <member name="M:Grupp4Lms.Data.MapperProfiles.MapperProfile.LitteraturMap">
            <summary>
            Mappers för Litteratur till LitteraturDto och 
            Litteratur till LitteraturInklusiveForfattareDto
            </summary>
        </member>
        <member name="T:Grupp4Lms.Data.Repositories.KurslitteraturRepository">
            <summary>
            KurslitteraturRepository med metoder för att hämta Forfattare och Litteratur
            </summary>
        </member>
        <member name="F:Grupp4Lms.Data.Repositories.KurslitteraturRepository.m_DbContext">
            <summary>
            Databas context
            </summary>
        </member>
        <member name="M:Grupp4Lms.Data.Repositories.KurslitteraturRepository.#ctor(Grupp4Lms.Data.Data.ApplicationDbContext)">
            <summary>
            Konstruktor
            </summary>
            <param name="context">Referense till context</param>
        </member>
        <member name="M:Grupp4Lms.Data.Repositories.KurslitteraturRepository.GetLittaraturAsync(System.Int32)">
            <summary>
            Async metod som returnerar sökt litteratur exklusive författare
            </summary>
            <param name="id">Id för sökt litteratur</param>
            <returns>Task med sökt litteratur exklusive författare eller null</returns>
        </member>
        <member name="M:Grupp4Lms.Data.Repositories.KurslitteraturRepository.GetLitteraturAsync">
            <summary>
            Async metod som returnerar litteratur exklusive författare
            </summary>
            <returns>IEnumerable med Litteratur exklusive författare</returns>
        </member>
        <member name="M:Grupp4Lms.Data.Repositories.KurslitteraturRepository.GetLitteraturInklusiveForfattareAsync">
            <summary>
            Async metod som returnerar litteratur inklusive författare
            </summary>
            <returns>IEnumerable med Litteratur inklusive författare</returns>
        </member>
        <member name="M:Grupp4Lms.Data.Repositories.KurslitteraturRepository.GetLitteraturInklusiveForfattareAsync(System.Int32)">
            <summary>
            Async metod som returnerar sökt litteratur inklusive författare
            </summary>
            <param name="id">Id för sökt litteratur</param>
            <returns>Task med sökt litteratur inklusive författare eller null</returns>
        </member>
        <member name="M:Grupp4Lms.Data.Repositories.KurslitteraturRepository.GetNivaerAsync">
            <summary>
            Async metod som returnerar alla nivåer
            </summary>
            <returns>IEnumerable med alla nivåer</returns>
        </member>
        <member name="M:Grupp4Lms.Data.Repositories.KurslitteraturRepository.GetAmnenAsync">
            <summary>
            Async metod som returnerar alla ämnen
            </summary>
            <returns>IEnumerable med alla ämnen</returns>
        </member>
        <member name="M:Grupp4Lms.Data.Repositories.KurslitteraturRepository.GetForfattareAsync">
            <summary>
            Async metod som returnerar alla författare
            </summary>
            <returns>IEnumerable med författare</returns>
        </member>
        <member name="M:Grupp4Lms.Data.Repositories.KurslitteraturRepository.GetForfattareAsync(System.Int32)">
            <summary>
            Async metod som returnerar sökt författare
            </summary>
            <param name="id">Id för sökt författare</param>
            <returns>Task med sökt författare</returns>
        </member>
        <member name="M:Grupp4Lms.Data.Repositories.KurslitteraturRepository.GetForfattareInklusiveLitteraturAsync">
            <summary>
            Async metod som returnerar alla författare inklusive litteratur som författaren har varit med och skrivit
            </summary>
            <returns>IEnumerable med författare inklusive litteratur som författaren har varit med och skrivit</returns>
        </member>
        <member name="M:Grupp4Lms.Data.Repositories.KurslitteraturRepository.GetForfattareInklusiveLitteraturAsync(System.Int32)">
            <summary>
            Async metod som returnerar en sökt författare inklusive litteratur som författaren har varit med och skrivit
            </summary>
            <param name="id">id för sökt författare</param>
            <returns>Task med sökt författare inklusive litteratur som författaren har varit med och skrivit</returns>
        </member>
        <member name="M:Grupp4Lms.Data.Repositories.KurslitteraturRepository.SearchLitteraturInklusiveForfattareAsyn(System.String,System.String,System.Int32)">
            <summary>
            Async metod som söker efter litteratur som matchar de olika sök parametrarna
            </summary>
            <param name="strTitel">Titel som vi vill söka på. Kontrollerar om titel innehåller sökt text. Kan vara null eller empty string</param>
            <param name="strForfattare">Namn på författaren som vi vill söka på. Kontrollerar om förnamn eller efternamn innehåller det som söks. Kan vara null eller empty string</param>
            <param name="iAmne">Id för ämne som vi vill söka på. Default är -1 och då söker vi inte på ämne</param>
            <returns>Task IEnumerable med Litteratur inklusive författare</returns>
        </member>
        <member name="M:Grupp4Lms.Data.Repositories.KurslitteraturRepository.PostLitteraturAsync(Grupp4Lms.Core.Entities.Litteratur)">
            <summary>
            Async metod som sparar en ny litteratur, inklusive författare i databasen. Det behöver inte finnas några författare
            </summary>
            <param name="litteratur">Den nya litteraturen som även kan innehålla författare</param>
            <returns>Task</returns>
            <exception cref="T:System.ArgumentNullException">Kastas om referensen till Litteratur objektet är null</exception>
        </member>
        <member name="M:Grupp4Lms.Data.Repositories.KurslitteraturRepository.PutLitteratur(Grupp4Lms.Core.Entities.Litteratur)">
            <summary>
            Metod som uppdaterar information om litteratur
            </summary>
            <param name="litteratur">Litteratur som vi skall uppdatera</param>
            <returns>void</returns>
            <exception cref="T:System.ArgumentNullException">Kastas om referensen till Litteratur objektet är null</exception>
        </member>
        <member name="M:Grupp4Lms.Data.Repositories.KurslitteraturRepository.DeleteLitteraturAsync(Grupp4Lms.Core.Entities.Litteratur)">
            <summary>
            Async metod som raderar litteratur
            </summary>
            <param name="litteratur">litteratur som skall raderas</param>
            <returns>Task</returns>
            <exception cref="T:System.ArgumentNullException">Kastas om referensen till Litteratur objektet är null</exception>
        </member>
        <member name="M:Grupp4Lms.Data.Repositories.KurslitteraturRepository.LitteraturExistsAsync(System.Int32)">
            <summary>
            Async metod som kontrollerar om litteraturen finns
            </summary>
            <param name="id">Id för litteraturen som vi söker</param>
            <returns>true om sökt literatur finns. Annars returneras false</returns>
        </member>
        <member name="M:Grupp4Lms.Data.Repositories.KurslitteraturRepository.PutForfattare(Grupp4Lms.Core.Entities.Forfattare)">
            <summary>
            Metod som uppdaterar information om en författare
            </summary>
            <param name="forfattare">Författare som skall uppdateras</param>
            <exception cref="T:System.ArgumentNullException">Kastas om referensen till Forfattare objektet är null</exception>
        </member>
        <member name="M:Grupp4Lms.Data.Repositories.KurslitteraturRepository.PostForfattareAsync(Grupp4Lms.Core.Entities.Forfattare)">
            <summary>
            Async metod som skapa ett nytt forfattare objekt i repository
            </summary>
            <param name="forfattare">Den nya författaren</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Kastas om referensen till Forfattare objektet är null</exception>
        </member>
        <member name="M:Grupp4Lms.Data.Repositories.KurslitteraturRepository.ForfattareExistsAsync(System.Int32)">
            <summary>
            Async metod som kontrollerar om författaren finns
            </summary>
            <param name="id">Id för författaren som vi söker</param>
            <returns>true om sökt literatur finns. Annars returneras false</returns>
        </member>
        <member name="M:Grupp4Lms.Data.Repositories.KurslitteraturRepository.SaveAsync">
            <summary>
            Async metod som sparar ändringar
            </summary>
            <returns>true om några ändringar sparas. Annars returneras false</returns>
        </member>
        <member name="T:Grupp4Lms.Data.Repositories.UnitOfWork">
            <summary>
            Unit of work objektet som har alla repositories
            </summary>
        </member>
        <member name="F:Grupp4Lms.Data.Repositories.UnitOfWork.m_dbContext">
            <summary>
            Databas context
            </summary>
        </member>
        <member name="P:Grupp4Lms.Data.Repositories.UnitOfWork.KurslitteraturRepository">
            <summary>
            KurslitteraturRepository
            </summary>
        </member>
        <member name="M:Grupp4Lms.Data.Repositories.UnitOfWork.#ctor(Grupp4Lms.Data.Data.ApplicationDbContext)">
            <summary>
            Konstruktor
            </summary>
            <param name="context">Referense till context</param>
        </member>
        <member name="M:Grupp4Lms.Data.Repositories.UnitOfWork.CompleteAsync">
            <summary>
            Async metod som skall spara uppdaterad data i repositories
            </summary>
            <returns>Task</returns>
        </member>
    </members>
</doc>
